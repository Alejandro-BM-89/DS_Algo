# My generic algorithm for binary search in Python:

def solution_function(...)
  return binary_search(array, low, high, condition)


def binary_search(array, low, high, condition):
    # Initial values, todo list
    while low <= high:
        mid = (low + high) // 2
        result = condition(array, mid)
        if result == 'found':
            return mid
        else if result == 'left':
            return binary_search(array, low, mid - 1, condition) 
        else if result == 'right':
            return binary_search(array, mid + 1, high, condition)
    return -1


def condition(array, mid):
        if CONDITION_REQUIRED: #CONDITION_REQUIRED is adaptable for each problem
                return 'found'
        else if CONDITION_LEFT: #CONDITION_LEFT is adaptable for each problem
                return 'left'
        else if CONDITION_RIGHT: #CONDITION_RIGHT is adaptable for each problem
                return 'right'


